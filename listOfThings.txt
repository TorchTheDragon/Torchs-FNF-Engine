Imported:
- All of my custom objects in case I want to use them
- Vanilla based Results Screen with a bit of customizabity for other characters
- Vanilla FNF Soundtray through some jank rerouting

Added:
- Added "musicAsString" function to Paths.hx
- Added "getDirectory" and "getDirectoryFile" functions to Paths.hx
- Added "loadAnimateAtlasFromLibrary" function to Paths.hx
- My own Haxe library
- New, improved, zoom function
- My custom noteskin for others to use
- Custom strum covers
- Per character based Note Colors, Note Splashes, and Note Strums (the setting affects all three at once), will be set in the character editor
- Character Based Note Colors Client Pref will be a list: enabled, opponent only, and disabled. Opponent only would allow the player to still use their own colors.
- "changeRGB" function in RGBPalette.hx's RGBShaderReference class to avoid a lot of repetition in code
- Reflected Character object added to BaseStage.hx to use if wanted, by default, they are not even initialized

Updates:
- Updated FlxAnimate to the newest version, also fixed issues with other ones in specific stages
- Updated sound, music, inst, soundRandom, getPath, and getTextFromFile functions in Paths file to include the option to use libraries/parent folders
- Three new base stage functions that utilize the Paths.currentLevel thing to ensure nothing breaks on accident ("playWeekSound" - plays a sound in the week folder, "playWeekMusic" - plays music in the week folder, "randomWeekSound" - plays a random sound provided)
- Updated both versions of monster to have left and right animations swapped
- Updated NoteSplash.hx's PixelSplashShaderRef class to include a function "setUsingFlxColors" to allow changing the RGB values easier using an FlxColor array

Plans/ToDo:
- Rewrite my Character Menu to match the Vanilla Character Menu
- Implement the new Freeplay Menu from Vanilla FNF
- Implement my custom healthbar that allows for other images to be used between characters

Working On:
- Specific note skins, note splashes, and strum covers for characters if toggle is enabled
- Disable RGB shader on notes, splashes, and covers if character overrides it, can be used for purposes where they use the assets directly from an image file instead of using the rgb shader to change the colors
- 